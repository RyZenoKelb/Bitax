// src/components/NetworkIcon.tsx
import React from 'react';
import { NetworkType } from '@/utils/transactions';

interface NetworkIconProps {
  network: NetworkType;
  size?: number;
  className?: string;
}

const NetworkIcon: React.FC<NetworkIconProps> = ({ network, size = 24, className = '' }) => {
  // Obtenir les couleurs par réseau
  const getNetworkColors = (network: NetworkType): { primary: string; secondary: string } => {
    switch (network) {
      case 'eth':
        return { primary: '#627EEA', secondary: '#BACBFF' };
      case 'polygon':
        return { primary: '#8247E5', secondary: '#C5B3F2' };
      case 'arbitrum':
        return { primary: '#28A0F0', secondary: '#ABDDFF' };
      case 'optimism':
        return { primary: '#FF0420', secondary: '#FFBAC2' };
      case 'base':
        return { primary: '#0052FF', secondary: '#B1CDFF' };
      default:
        return { primary: '#627EEA', secondary: '#BACBFF' };
    }
  };

  // Obtenir les couleurs pour ce réseau
  const colors = getNetworkColors(network);

  // Rendu du SVG approprié en fonction du réseau
  const renderNetworkIcon = () => {
    switch (network) {
      case 'eth':
        return (
          <svg width={size} height={size} viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
            <g clipPath="url(#clip0_eth)">
              <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill={colors.primary} />
              <path d="M16.498 4V12.87L23.995 16.22L16.498 4Z" fill="white" fillOpacity="0.6" />
              <path d="M16.498 4L9 16.22L16.498 12.87V4Z" fill="white" />
              <path d="M16.498 21.9682V27.9952L24 17.6162L16.498 21.9682Z" fill="white" fillOpacity="0.6" />
              <path d="M16.498 27.9952V21.9672L9 17.6162L16.498 27.9952Z" fill="white" />
              <path d="M16.498 20.5731L23.995 16.2201L16.498 12.8721V20.5731Z" fill="white" fillOpacity="0.2" />
              <path d="M9 16.2201L16.498 20.5731V12.8721L9 16.2201Z" fill="white" fillOpacity="0.6" />
            </g>
            <defs>
              <clipPath id="clip0_eth">
                <rect width="32" height="32" fill="white" />
              </clipPath>
            </defs>
          </svg>
        );
      case 'polygon':
        return (
          <svg width={size} height={size} viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
            <g clipPath="url(#clip0_polygon)">
              <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill={colors.primary} />
              <path d="M21.0078 13.0944C20.6444 12.8856 20.1944 12.8856 19.7878 13.0944L16.7478 14.8544L14.6678 16.0144L11.6478 17.7756C11.2844 17.9856 10.8344 17.9856 10.4278 17.7756L8.08778 16.4344C7.72445 16.2244 7.47778 15.8344 7.47778 15.4044V12.7644C7.47778 12.3344 7.68445 11.9444 8.08778 11.7344L10.3878 10.4144C10.7511 10.2044 11.2011 10.2044 11.6078 10.4144L13.9078 11.7344C14.2711 11.9444 14.5178 12.3344 14.5178 12.7644V14.5244L16.5978 13.3256V11.5656C16.5978 11.1356 16.3911 10.7456 15.9878 10.5356L11.6478 8.15556C11.2844 7.94556 10.8344 7.94556 10.4278 8.15556L5.96778 10.5356C5.56445 10.7456 5.35778 11.1356 5.35778 11.5656V16.6044C5.35778 17.0344 5.56445 17.4244 5.96778 17.6344L10.4278 20.0144C10.7911 20.2244 11.2411 20.2244 11.6478 20.0144L14.6678 18.2944L16.7478 17.0944L19.7678 15.3744C20.1311 15.1644 20.5811 15.1644 20.9878 15.3744L23.2878 16.6944C23.6511 16.9044 23.8978 17.2944 23.8978 17.7244V20.3644C23.8978 20.7944 23.6911 21.1844 23.2878 21.3944L20.9878 22.7144C20.6244 22.9244 20.1744 22.9244 19.7678 22.7144L17.4678 21.3944C17.1044 21.1844 16.8578 20.7944 16.8578 20.3644V18.6044L14.7778 19.8044V21.5644C14.7778 21.9944 14.9844 22.3844 15.3878 22.5944L19.8478 24.9744C20.2111 25.1844 20.6611 25.1844 21.0678 24.9744L25.5278 22.5944C25.8911 22.3844 26.1378 21.9944 26.1378 21.5644V16.5256C26.1378 16.0956 25.9311 15.7056 25.5278 15.4956L21.0078 13.0944Z" fill="white" />
            </g>
            <defs>
              <clipPath id="clip0_polygon">
                <rect width="32" height="32" fill="white" />
              </clipPath>
            </defs>
          </svg>
        );
      case 'arbitrum':
        return (
          <svg width={size} height={size} viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
            <g clipPath="url(#clip0_arbitrum)">
              <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill={colors.primary} />
              <path d="M16.0007 4L6.22266 18.0711L16.0007 13.0396L25.7777 18.0711L16.0007 4Z" fill="white" />
              <path d="M14.8214 24.0305V27.9999L6.22266 19.1471L14.8214 24.0305Z" fill="white" />
              <path d="M17.1786 24.0305V27.9999L25.7774 19.1471L17.1786 24.0305Z" fill="white" />
              <path d="M6.22266 18.0711L16.0007 22.8786L25.7777 18.0711L16.0007 13.0396L6.22266 18.0711Z" fill="white" />
            </g>
            <defs>
              <clipPath id="clip0_arbitrum">
                <rect width="32" height="32" fill="white" />
              </clipPath>
            </defs>
          </svg>
        );
      case 'optimism':
        return (
          <svg width={size} height={size} viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
            <g clipPath="url(#clip0_optimism)">
              <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill={colors.primary} />
              <path fillRule="evenodd" clipRule="evenodd" d="M9.1 19.892C8.323 19.892 7.75 19.731 7.382 19.409C7.023 19.079 6.843 18.594 6.843 17.956C6.843 17.801 6.856 17.61 6.883 17.382C6.917 17.154 6.963 16.9 7.024 16.618L8.192 11.212C8.254 10.929 8.288 10.656 8.296 10.392C8.313 10.128 8.321 9.89 8.321 9.679C8.321 9.312 8.231 9.039 8.051 8.857C7.87 8.668 7.55 8.573 7.09 8.573C6.843 8.573 6.564 8.599 6.254 8.651C5.953 8.694 5.73 8.737 5.581 8.78L5.792 7.711C6.482 7.541 7.113 7.397 7.687 7.278C8.269 7.159 8.803 7.1 9.291 7.1C10.541 7.1 11.418 7.311 11.922 7.731C12.434 8.151 12.689 8.763 12.689 9.569C12.689 9.74 12.677 9.952 12.651 10.205C12.634 10.452 12.596 10.716 12.535 10.998L11.363 16.41C11.309 16.649 11.267 16.904 11.235 17.175C11.209 17.439 11.196 17.66 11.196 17.839C11.196 18.223 11.299 18.5 11.504 18.673C11.719 18.847 12.064 18.934 12.541 18.934C12.77 18.934 13.04 18.908 13.351 18.856C13.661 18.795 13.87 18.752 13.978 18.726L13.765 19.794C13.27 19.938 12.765 20.057 12.25 20.15C11.744 20.244 11.248 20.292 10.76 20.292C9.619 20.292 8.803 20.09 8.312 19.687C7.83 19.284 7.586 18.669 7.586 17.839C7.586 17.685 7.598 17.481 7.624 17.228C7.65 16.973 7.688 16.716 7.74 16.458L8.918 11.038C8.963 10.85 9.002 10.669 9.036 10.495C9.079 10.314 9.1 10.15 9.1 10.003C9.1 9.637 9.011 9.376 8.83 9.22C8.651 9.055 8.322 8.973 7.846 8.973C7.671 8.973 7.458 8.99 7.205 9.025C6.952 9.06 6.773 9.089 6.672 9.115L6.886 8.039C7.205 7.945 7.584 7.855 8.025 7.766C8.473 7.677 8.891 7.633 9.279 7.633C10.35 7.633 11.107 7.834 11.549 8.238C12 8.641 12.229 9.254 12.229 10.075C12.229 10.211 12.215 10.407 12.19 10.66C12.173 10.907 12.135 11.171 12.073 11.453L10.901 16.856C10.857 17.026 10.817 17.209 10.775 17.401C10.741 17.592 10.723 17.757 10.723 17.896C10.723 18.262 10.813 18.527 10.994 18.691C11.174 18.855 11.503 18.936 11.979 18.936C12.146 18.936 12.368 18.921 12.645 18.887C12.924 18.843 13.111 18.808 13.202 18.78L12.989 19.856C12.628 19.95 12.249 20.036 11.85 20.116C11.453 20.196 11.072 20.237 10.709 20.237C9.612 20.237 8.854 20.038 8.429 19.642C8.013 19.246 7.805 18.631 7.805 17.803C7.805 17.668 7.817 17.481 7.843 17.243C7.878 17.006 7.917 16.751 7.97 16.477L9.148 11.075C9.193 10.883 9.229 10.703 9.254 10.536C9.288 10.363 9.305 10.211 9.305 10.081C9.305 9.818 9.233 9.627 9.088 9.51C8.943 9.384 8.761 9.321 8.541 9.321C8.418 9.321 8.262 9.334 8.075 9.36C7.888 9.376 7.722 9.4 7.582 9.43L7.732 8.65C8.017 8.582 8.316 8.522 8.63 8.47C8.952 8.419 9.242 8.393 9.501 8.393C10.129 8.393 10.598 8.522 10.911 8.78C11.223 9.038 11.38 9.425 11.38 9.943C11.38 10.078 11.368 10.255 11.343 10.477C11.318 10.698 11.28 10.935 11.228 11.184L10.049 16.586C9.997 16.807 9.957 17.014 9.931 17.206C9.906 17.39 9.893 17.55 9.893 17.688C9.893 17.97 9.97 18.179 10.123 18.313C10.276 18.448 10.526 18.515 10.873 18.515C10.988 18.515 11.148 18.502 11.351 18.476C11.564 18.442 11.73 18.416 11.853 18.399L11.703 19.18C11.442 19.24 11.164 19.3 10.868 19.36C10.573 19.419 10.292 19.448 10.025 19.448C9.362 19.448 8.878 19.328 8.573 19.087C8.268 18.839 8.115 18.466 8.115 17.971C8.115 17.827 8.13 17.64 8.164 17.41C8.198 17.172 8.247 16.912 8.311 16.63L9.49 11.22C9.551 10.963 9.603 10.716 9.646 10.479C9.69 10.233 9.712 10.013 9.712 9.818C9.712 9.417 9.568 9.115 9.279 8.913C8.999 8.703 8.57 8.599 7.995 8.599C7.756 8.599 7.502 8.616 7.232 8.651C6.97 8.685 6.736 8.72 6.53 8.755L6.764 7.479C7.117 7.399 7.482 7.327 7.858 7.26C8.243 7.193 8.593 7.159 8.908 7.159C9.953 7.159 10.735 7.361 11.254 7.766C11.773 8.162 12.033 8.725 12.033 9.456C12.033 9.626 12.018 9.834 11.984 10.081C11.959 10.327 11.909 10.59 11.831 10.87L10.652 16.28C10.592 16.537 10.543 16.768 10.509 16.974C10.474 17.18 10.456 17.365 10.456 17.527C10.456 17.878 10.543 18.135 10.716 18.296C10.889 18.457 11.152 18.538 11.506 18.538C11.651 18.538 11.818 18.527 12.004 18.501C12.199 18.476 12.389 18.44 12.576 18.398L12.343 19.65C12.055 19.739 11.754 19.819 11.439 19.892C11.133 19.966 10.844 20.002 10.569 20.002C9.772 20.002 9.191 19.826 8.827 19.473C8.462 19.121 8.28 18.59 8.28 17.881C8.28 17.711 8.293 17.52 8.318 17.307C8.352 17.086 8.4 16.856 8.461 16.616L9.639 11.206C9.683 11.034 9.721 10.87 9.755 10.716C9.789 10.552 9.806 10.4 9.806 10.258C9.806 9.968 9.738 9.763 9.602 9.644C9.475 9.525 9.281 9.465 9.021 9.465C8.887 9.465 8.744 9.473 8.591 9.491C8.447 9.508 8.322 9.526 8.215 9.543L8.385 8.752C8.616 8.7 8.865 8.651 9.131 8.608C9.397 8.565 9.628 8.542 9.823 8.542C10.324 8.542 10.701 8.659 10.954 8.892C11.215 9.115 11.346 9.456 11.346 9.917C11.346 10.047 11.333 10.205 11.308 10.392C11.291 10.579 11.258 10.775 11.21 10.98L10.033 16.391C9.988 16.577 9.951 16.76 9.925 16.938C9.899 17.108 9.886 17.26 9.886 17.394C9.886 17.693 9.954 17.907 10.09 18.035C10.236 18.154 10.479 18.214 10.823 18.214C10.949 18.214 11.114 18.196 11.32 18.162C11.534 18.12 11.693 18.085 11.8 18.053L11.629 18.87C11.398 18.921 11.149 18.97 10.883 19.005C10.626 19.047 10.386 19.069 10.166 19.069C9.648 19.069 9.258 18.96 8.997 18.742C8.736 18.516 8.605 18.169 8.605 17.705C8.605 17.584 8.622 17.422 8.655 17.217C8.689 17.004 8.731 16.782 8.781 16.552L9.958 11.142C10.012 10.929 10.058 10.73 10.093 10.546C10.127 10.353 10.144 10.185 10.144 10.039C10.144 9.679 10.042 9.422 9.838 9.271C9.634 9.109 9.294 9.027 8.82 9.027C8.66 9.027 8.453 9.045 8.2 9.079C7.947 9.113 7.756 9.148 7.628 9.183L7.846 8.326C8.088 8.267 8.343 8.216 8.608 8.173C8.873 8.13 9.115 8.109 9.334 8.109C9.988 8.109 10.476 8.238 10.8 8.496C11.123 8.746 11.284 9.124 11.284 9.628C11.284 9.783 11.267 9.958 11.232 10.151C11.198 10.336 11.157 10.534 11.105 10.748L9.927 16.158C9.881 16.354 9.841 16.548 9.806 16.737C9.772 16.917 9.755 17.078 9.755 17.217C9.755 17.56 9.852 17.803 10.048 17.946C10.252 18.08 10.569 18.147 10.996 18.147C11.114 18.147 11.264 18.138 11.442 18.121C11.63 18.104 11.772 18.08 11.871 18.053L11.641 18.936C11.419 18.988 11.184 19.03 10.936 19.064C10.697 19.099 10.478 19.117 10.292 19.117C9.696 19.117 9.252 18.997 8.959 18.759C8.675 18.512 8.532 18.147 8.532 17.664C8.532 17.499 8.549 17.316 8.583 17.115C8.626 16.905 8.679 16.695 8.747 16.483L9.926 11.074C9.978 10.88 10.02 10.699 10.054 10.53C10.097 10.353 10.119 10.193 10.119 10.054C10.119 9.713 10.028 9.465 9.847 9.313C9.664 9.152 9.382 9.071 8.998 9.071C8.837 9.071 8.651 9.089 8.44 9.124C8.238 9.158 8.061 9.193 7.91 9.227L8.124 8.325C8.34 8.273 8.581 8.224 8.846 8.178C9.119 8.132 9.372 8.109 9.602 8.109C10.183 8.109 10.634 8.231 10.957 8.476C11.289 8.712 11.454 9.071 11.454 9.55C11.454 9.688 11.438 9.865 11.403 10.081C11.378 10.289 11.337 10.514 11.285 10.757L10.107 16.167C10.05 16.389 10.011 16.599 9.987 16.804C9.961 17 9.949 17.171 9.949 17.32C9.949 17.677 10.045 17.945 10.236 18.126C10.437 18.297 10.752 18.382 11.183 18.382C11.346 18.382 11.529 18.365 11.73 18.33C11.94 18.296 12.114 18.254 12.258 18.205L12.073 19.036C11.89 19.078 11.685 19.116 11.46 19.148C11.243 19.18 11.023 19.195 10.8 19.195C10.321 19.195 9.931 19.115 9.63 18.956C9.338 18.796 9.137 18.558 9.026 18.241C8.974 18.407 8.904 18.542 8.813 18.648C8.73 18.753 8.626 18.839 8.5 18.905C8.271 19.015 8.01 19.099 7.717 19.156C7.434 19.214 7.157 19.244 6.889 19.244C6.354 19.244 5.927 19.105 5.606 18.831C5.286 18.546 5.126 18.114 5.126 17.527C5.126 17.38 5.143 17.209 5.177 17.013C5.211 16.817 5.253 16.616 5.306 16.411L6.483 11.022C6.527 10.845 6.565 10.673 6.599 10.504C6.633 10.328 6.651 10.166 6.651 10.022C6.651 9.69 6.569 9.459 6.408 9.332C6.253 9.196 5.99 9.129 5.619 9.129C5.488 9.129 5.32 9.142 5.115 9.167C4.91 9.192 4.723 9.218 4.554 9.244L4.765 8.333C5.005 8.281 5.263 8.232 5.537 8.186C5.811 8.139 6.066 8.116 6.306 8.116C6.881 8.116 7.325 8.228 7.64 8.454C7.955 8.679 8.113 9.009 8.113 9.439C8.113 9.577 8.097 9.752 8.063 9.96C8.038 10.16 7.993 10.38 7.927 10.617L6.75 16.013C6.697 16.221 6.655 16.424 6.621 16.62C6.596 16.808 6.581 16.984 6.581 17.139C6.581 17.465 6.655 17.711 6.801 17.88C6.956 18.041 7.22 18.121 7.591 18.121C7.957 18.121 8.258 18.026 8.494 17.837C8.739 17.64 8.946 17.351 9.113 16.973V16.965C9.113 16.956 9.111 16.95 9.107 16.939C9.102 16.934 9.1 16.924 9.1 16.915V16.906L10.278 11.516C10.321 11.339 10.359 11.166 10.394 10.997C10.436 10.82 10.456 10.658 10.456 10.512C10.456 10.18 10.375 9.935 10.213 9.779C10.062 9.613 9.799 9.53 9.428 9.53C9.271 9.53 9.088 9.543 8.883 9.569C8.678 9.594 8.494 9.619 8.326 9.646L8.565 8.683C8.788 8.631 9.026 8.582 9.281 8.536C9.543 8.48 9.781 8.453 9.986 8.453C10.562 8.453 11.013 8.573 11.337 8.813C11.67 9.044 11.837 9.391 11.837 9.852C11.837 10 11.82 10.175 11.786 10.384C11.76 10.584 11.715 10.805 11.656 11.041L10.48 16.428C10.428 16.633 10.386 16.835 10.351 17.03C10.328 17.217 10.315 17.385 10.315 17.532C10.315 17.833 10.372 18.062 10.487 18.222C10.603 18.382 10.786 18.477 11.038 18.518L11.217 17.803L9.1 19.892ZM24.492 11.645C24.15 11.645 23.834 11.707 23.55 11.829C23.272 11.952 23.025 12.148 22.811 12.419C22.613 12.678 22.451 13.012 22.333 13.424C22.233 13.788 22.183 14.213 22.183 14.697C22.183 15.071 22.218 15.407 22.286 15.706C22.363 15.996 22.479 16.246 22.638 16.456C22.814 16.681 23.038 16.842 23.311 16.955C23.585 17.088 23.914 17.155 24.3 17.155C24.548 17.155 24.797 17.13 25.047 17.077C25.305 17.017 25.596 16.911 25.922 16.76L26.158 19.175C25.984 19.243 25.793 19.303 25.587 19.356C25.39 19.409 25.183 19.453 24.968 19.489C24.761 19.532 24.55 19.565 24.335 19.583C24.129 19.609 23.93 19.622 23.741 19.622C23.168 19.622 22.605 19.543 22.05 19.384C21.504 19.218 21.012 18.96 20.573 18.61C20.173 18.284 19.848 17.85 19.601 17.31C19.361 16.763 19.242 16.09 19.242 15.295C19.242 14.407 19.394 13.613 19.695 12.915C20.005 12.208 20.417 11.611 20.931 11.123C21.486 10.591 22.133 10.185 22.869 9.902C23.602 9.612 24.392 9.468 25.235 9.468C26.318 9.468 27.14 9.687 27.697 10.124C28.287 10.586 28.583 11.246 28.583 12.103C28.583 12.678 28.465 13.157 28.225 13.544C27.995 13.93 27.697 14.248 27.33 14.495C26.964 14.744 26.547 14.933 26.078 15.064C25.61 15.187 25.138 15.248 24.661 15.248C24.325 15.248 24.01 15.221 23.717 15.169C23.424 15.108 23.143 15.011 22.872 14.879C22.884 14.504 22.92 14.069 22.98 13.573C23.049 13.078 23.143 12.664 23.261 12.337C23.379 12.009 23.52 11.772 23.682 11.626C23.853 11.472 24.045 11.395 24.261 11.395C24.447 11.395 24.618 11.443 24.77 11.54C24.932 11.637 25.073 11.759 25.198 11.906C25.323 12.054 25.419 12.21 25.493 12.375C25.575 12.532 25.619 12.686 25.619 12.835C25.619 13.01 25.581 13.139 25.506 13.226C25.44 13.304 25.352 13.342 25.241 13.342C25.147 13.342 25.065 13.316 24.996 13.263C24.927 13.211 24.857 13.153 24.788 13.09C24.736 13.046 24.679 13.01 24.619 12.984C24.567 12.958 24.505 12.945 24.431 12.945C24.312 12.945 24.201 12.984 24.098 13.063C24.003 13.142 23.925 13.265 23.867 13.432C23.809 13.589 23.76 13.792 23.726 14.037C23.691 14.274 23.674 14.556 23.674 14.88C23.87 14.994 24.079 15.073 24.302 15.116C24.526 15.159 24.744 15.181 24.951 15.181C25.305 15.181 25.617 15.124 25.887 15.01C26.157 14.897 26.383 14.739 26.57 14.538C26.748 14.341 26.882 14.116 26.973 13.863C27.065 13.61 27.11 13.347 27.11 13.072C27.11 12.484 26.886 12.049 26.437 11.768C25.996 11.486 25.331 11.346 24.442 11.346L24.492 11.645Z" fill="white" />
            </g>
            <defs>
              <clipPath id="clip0_optimism">
                <rect width="32" height="32" fill="white" />
              </clipPath>
            </defs>
          </svg>
        );
      case 'base':
        return (
          <svg width={size} height={size} viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
            <g clipPath="url(#clip0_base)">
              <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill={colors.primary} />
              <path fillRule="evenodd" clipRule="evenodd" d="M16 28C22.6274 28 28 22.6274 28 16C28 9.37258 22.6274 4 16 4C9.37258 4 4 9.37258 4 16C4 22.6274 9.37258 28 16 28ZM16 26C21.5228 26 26 21.5228 26 16C26 10.4772 21.5228 6 16 6C10.4772 6 6 10.4772 6 16C6 21.5228 10.4772 26 16 26Z" fill="white" />
            </g>
            <defs>
              <clipPath id="clip0_base">
                <rect width="32" height="32" fill="white" />
              </clipPath>
            </defs>
          </svg>
        );
      default:
        return (
          <svg width={size} height={size} viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
            <circle cx="16" cy="16" r="16" fill={colors.primary} />
            <text x="16" y="22" textAnchor="middle" fontSize="16" fill="white" fontWeight="bold">
              {network.charAt(0).toUpperCase()}
            </text>
          </svg>
        );
    }
  };

  return (
    <div className={className}>
      {renderNetworkIcon()}
    </div>
  );
};

export default NetworkIcon;